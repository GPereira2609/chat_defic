"use client";
import BalaoMensagem from "./components/BotaoMensagem";
import { useState, useEffect, useRef } from "react";
import salvar from "./functions/salvar";
import axios from "axios";

export default function Home() {
  const [mensagemAtual, setMensagemAtual] = useState("");
  const [mensagensUsuario, setMensagensUsuario] = useState([]);
  // let mensagensUsuario = [];
  const [mensagensBot, setMensagensBot] = useState([]);
  // const mensagens: Mensagens[] = [{"usuario": "bot", "mensagem": "Ol√°! Eu sou um assistente virtual do Conselho Municipal da Pessoa com Defici√™ncia. üòä Como posso ajudar voc√™ hoje? Se preferir, posso cham√°-lo pelo seu nome. Como devo me referir¬†a¬†voc√™?¬†"}];
  const [mensagens, setMensagens] = useState([])
  const [botFalando, setBotFalando] = useState(false);

  const [context, setContext] = useState("nome");

  const mensagensRef = useRef(null)

  const enviarMensagemInicial = () => {
    setMensagensBot([...mensagensBot, "Ol√°! Eu sou um assistente virtual do Conselho Municipal da Pessoa com Defici√™ncia. üòä Como posso ajudar voc√™ hoje? Se preferir, posso cham√°-lo pelo seu nome. Como devo me referir¬†a¬†voc√™?"])
    setMensagens([...mensagens,  {"usuario": "bot", "mensagem": "Ol√°! Eu sou um assistente virtual do Conselho Municipal da Pessoa com Defici√™ncia. üòä Como posso ajudar voc√™ hoje? Se preferir, posso cham√°-lo pelo seu nome. Como devo me referir¬†a¬†voc√™?"}])
  }

  useEffect(() => {
    setTimeout(enviarMensagemInicial, 1500)
  }, [])

  useEffect(() => {
    console.log(mensagensUsuario)
    setTimeout(responderMensagem, 1500)
  }, [mensagensUsuario])

  useEffect(() => {
    if(mensagensRef.current) {
      mensagensRef.current.scrollTop = mensagensRef.current.scrollHeight;
    }
  }, [mensagens])

  const enviarMensagem = () => {
    if (mensagemAtual.trim() !== "") {
      if (botFalando) {
        setMensagensBot([...mensagensBot, mensagemAtual]);
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": mensagemAtual}])
      } else if(!botFalando) {
        setMensagensUsuario([...mensagensUsuario, mensagemAtual]);
        // mensagensUsuario.push(mensagemAtual)
        setMensagens([...mensagens, {"usuario": "user", "mensagem": mensagemAtual}])
      }
      // console.log(mensagens)
      setBotFalando(!botFalando);
      setMensagemAtual("");
    }
  };

  const salvarMensagem = () => {
    const [ nome, eDeficiente, opcao1 ] = mensagensUsuario;
    axios.post(`/api/form`, {name: nome, isDeficiente: eDeficiente, primaryOption: opcao1})
      .then((res) => console.log(res))
      .catch((err) => console.log(err))
  };

  const responderMensagem = () => {
    // responder o nome
    if(context === "nome") {
      if(botFalando) {
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": 

        `√ìtimo, ${mensagensUsuario.slice(-1)[0]}! √â um prazer ajudar. Agora, por favor, digite o n√∫mero correspondente √† sua situa√ß√£o:
        
        1. Se voc√™ √© uma pessoa com defici√™ncia.
        
        2. Se voc√™ √© o acompanhante de uma pessoa com defici√™ncia.
        
        Digite o n√∫mero que melhor se aplica √† sua situa√ß√£o, e estarei aqui para fornecer a assist√™ncia¬†necess√°ria.¬†`}])
        
        // setMensagemAtual("");
        setContext("deficiencia");
        setBotFalando(!botFalando);
      }
    } 
    // responder sobre deficiencia
    else if(context === "deficiencia") {
      if(botFalando) {
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": `Aqui est√£o algumas op√ß√µes de servi√ßos que posso fornecer:

        1. Informa√ß√µes Gerais: Se precisar de informa√ß√µes sobre os servi√ßos oferecidos pelo Conselho ou eventos futuros, estou aqui para ajudar.
        
        2. Acessibilidade: Caso tenha d√∫vidas sobre acessibilidade em locais p√∫blicos, transporte ou necessite de orienta√ß√µes sobre adapta√ß√µes, pergunte-me!
        
        3. Legisla√ß√£o: Se precisar de informa√ß√µes sobre legisla√ß√£o relacionada √† pessoa com defici√™ncia, estou √† disposi√ß√£o para fornecer orienta√ß√µes.
        
        4. Den√∫ncias e Sugest√µes: Caso tenha alguma den√∫ncia ou sugest√£o para melhorias em nossa cidade no que diz respeito √† acessibilidade, sinta-se √† vontade para compartilhar.
        
        Digite o n√∫mero correspondente √† sua solicita√ß√£o ou escreva sua pergunta. Estou aqui para¬†ajudar!¬†ü§ñ`}])
        // setMensagemAtual("");
        setContext("inicial");
        setBotFalando(!botFalando)
      }
    }
    else if(context === "inicial") {
      const ultimaMsg = mensagensUsuario.slice(-1)[0];
      if(botFalando && ultimaMsg==="1") {
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": `1. Miss√£o e Objetivos do Conselho.  (Forne√ßa uma breve descri√ß√£o sobre a miss√£o e os objetivos do Conselho, destacando seu compromisso em promover a inclus√£o e os direitos das pessoas com defici√™ncia.)

        2. Servi√ßos Oferecidos. (Liste os principais servi√ßos que o Conselho Municipal da Pessoa com Defici√™ncia oferece √† comunidade, como a promo√ß√£o da acessibilidade, orienta√ß√µes legais, eventos educativos, entre outros.)
        
        3. Eventos e Atividades Futuras. (Informe sobre eventos, workshops, semin√°rios ou outras atividades futuras relacionadas √† inclus√£o e conscientiza√ß√£o sobre defici√™ncia que podem ser de interesse para a comunidade.)
        
        4. Contato e Hor√°rio de Atendimento. (Forne√ßa informa√ß√µes sobre como entrar em contato com o Conselho, incluindo endere√ßo de e-mail, telefone e hor√°rios de atendimento presencial, se aplic√°vel.)
        
        5. Recursos Online. (Se houver um site ou recursos online relevantes, forne√ßa links para acesso f√°cil a documentos, guias ou outras informa√ß√µes √∫teis.)
        
        6. Parcerias e Colabora√ß√µes. (Destaque parcerias ou colabora√ß√µes significativas que o Conselho mant√©m com outras organiza√ß√µes locais, estaduais¬†ou¬†nacionais.)`}])
        // setMensagemAtual("")
        setContext("secundario");
        setBotFalando(!botFalando)
        // console.log(context)
      }
      else if(botFalando && ultimaMsg==="2") {
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": `1. Locais P√∫blicos. (Forne√ßa orienta√ß√µes sobre como acessar e identificar locais p√∫blicos adaptados para pessoas com defici√™ncia, como parques, bibliotecas e pr√©dios governamentais.)

        2. Transporte Acess√≠vel. (Informe sobre op√ß√µes de transporte p√∫blico acess√≠veis e forne√ßa orienta√ß√µes sobre como solicitar servi√ßos de transporte adaptado, se dispon√≠veis.)
        
        3. Adapta√ß√µes Residenciais. (Ofere√ßa dicas e recursos sobre como tornar resid√™ncias mais acess√≠veis, incluindo informa√ß√µes sobre tecnologias assistivas e modifica√ß√µes¬†estruturais.)`}])
        // setMensagemAtual("")
        setContext("secundario");
        setBotFalando(!botFalando);
      }
      else if(botFalando && ultimaMsg==="3") {
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": `1. Leis de Acessibilidade. (Forne√ßa resumos das principais leis locais, estaduais e federais relacionadas √† acessibilidade e aos direitos das pessoas com defici√™ncia.)

        2. Direitos Individuais. (Explicite os direitos individuais garantidos por lei, como acessibilidade ao trabalho, √† educa√ß√£o, ao transporte e √† participa√ß√£o em eventos p√∫blicos.)
        
        3. Processos de Den√∫ncia. (Esclare√ßa o processo para registrar den√∫ncias de discrimina√ß√£o ou falta de acessibilidade, incluindo informa√ß√µes sobre como o Conselho pode apoiar¬†nesses¬†casos.)`}])
        setContext("secundario");
        setBotFalando(!botFalando);
      }
      else if(botFalando && ultimaMsg==="4") {
        setMensagens([...mensagens, {"usuario": "bot", "mensagem": `1. Canal de Den√∫ncias. (Forne√ßa detalhes sobre como os usu√°rios podem apresentar den√∫ncias relacionadas √† falta de acessibilidade ou discrimina√ß√£o.)
        
        2. Acompanhamento de Den√∫ncias. (Explique o processo de acompanhamento das den√∫ncias, incluindo prazos e como as partes interessadas podem ser informadas sobre os resultados.)
        
        3. Sugest√µes para Melhorias. (Encoraje os usu√°rios a compartilhar sugest√µes para melhorar a acessibilidade na comunidade, explicando como suas contribui√ß√µes podem fazer a diferen√ßa.)`}])
        setContext("secundario");
        setBotFalando(!botFalando)
      }
      salvarMensagem();
    }
    else if(context === "secundario") {
      salvarMensagem();
    }
  }

  return (
    <div className="h-screen w-screen flex flex-col justify-center items-center bg-222831">
      <div className="h-1/6 w-full flex flex-col justify-center items-center">
        <h1 className="text-4xl text-white font-bold">Conselho Municipal da Pessoa com Defici√™ncia</h1>
      </div>
      <div className="h-full w-2/3 flex flex-row justify-center items-center border rounded-lg border-31363F p-4 bg-31363F overflow-y-scroll" style={{ maxHeight: 'calc(100vh - 200px)' }} ref={mensagensRef}>
        <div className="w-full h-100 flex flex-col justify-end items-start">
          {mensagens.map((msg, index) => (
            msg["usuario"]==="bot" ? <BalaoMensagem key={`bot-${index}`} cor="white" mensagem={`${msg["mensagem"]}`} /> : <BalaoMensagem key={`user-${index}`} cor="blue" mensagem={`${msg["mensagem"]}`} />
          ))}
        </div>
      </div>
      <div className="h-1/6 w-2/3 flex flex-row justify-center items-center prose">
        <input
          value={mensagemAtual}
          onChange={(e) => setMensagemAtual(e.target.value)}
          className="w-full p-2 rounded-md border border-222831 focus:border-222831 bg-31363F outline-none text-white"
          placeholder="Digite algo:"
        />
        <button onClick={enviarMensagem} className="w-80 p-2 rounded-md border border-222831 focus:border-222831 bg-31363F outline-none m-6">
          <h2 className="text-white font-bold text-2xl">Enviar</h2>
        </button>
      </div>
    </div>
  );
}

